apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    services:
      cidrBlocks: ["${VIRTINK_SERVICE_CIDR}"]
    pods:
      cidrBlocks: ["${VIRTINK_POD_NETWORK_CIDR}"]
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: ${CLUSTER_NAME}-cp
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: VirtinkCluster
    name: ${CLUSTER_NAME}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VirtinkCluster
metadata:
  name: ${CLUSTER_NAME}
spec: {}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: ${CLUSTER_NAME}-cp
spec:
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: VirtinkMachineTemplate
      name: ${CLUSTER_NAME}-cp
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          provider-id: virtink://{{ ds.meta_data.instance_id }}
        ignorePreflightErrors:
          - SystemVerification
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          provider-id: virtink://{{ ds.meta_data.instance_id }}
        ignorePreflightErrors:
          - SystemVerification
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VirtinkMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-cp
spec:
  template:
    spec:
      vmSpec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  topologyKey: kubernetes.io/hostname
                  labelSelector:
                    matchExpressions:
                      - key: cluster.x-k8s.io/control-plane
                        operator: Exists
        runPolicy: Once
        readinessProbe:
          httpGet:
            scheme: HTTPS
            port: 6443
            path: /readyz
        instance:
          cpu:
            sockets: ${VIRTINK_MACHINE_CPU_COUNT}
            coresPerSocket: 1
          memory:
            size: ${VIRTINK_MACHINE_MEMORY_SIZE}
          kernel:
            image: ${VIRTINK_MACHINE_KERNEL_IMAGE}
            cmdline: console=ttyS0 root=/dev/vda rw
          disks:
            - name: rootfs
          interfaces:
            - name: pod
        volumes:
          - name: rootfs
            containerRootfs:
              image: ${VIRTINK_MACHINE_ROOTFS_IMAGE}
              size: ${VIRTINK_MACHINE_ROOTFS_SIZE}
        networks:
          - name: pod
            pod: {}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineHealthCheck
metadata:
  name: ${CLUSTER_NAME}-control-plane-unhealthy-5m
spec:
  clusterName: ${CLUSTER_NAME}
  maxUnhealthy: 50%
  selector:
    matchExpressions:
      - key: cluster.x-k8s.io/control-plane
        operator: Exists
  unhealthyConditions:
    - type: Ready
      status: Unknown
      timeout: 300s
    - type: Ready
      status: "False"
      timeout: 300s
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: ${CLUSTER_NAME}-md
spec:
  clusterName: ${CLUSTER_NAME}
  replicas: ${WORKER_MACHINE_COUNT}
  selector: {}
  template:
    spec:
      clusterName: ${CLUSTER_NAME}
      version: ${KUBERNETES_VERSION}
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: ${CLUSTER_NAME}-md
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: VirtinkMachineTemplate
        name: ${CLUSTER_NAME}-md
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            provider-id: virtink://{{ ds.meta_data.instance_id }}
          ignorePreflightErrors:
            - SystemVerification
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: VirtinkMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md
spec:
  template:
    spec:
      vmSpec:
        runPolicy: Once
        instance:
          cpu:
            sockets: ${VIRTINK_MACHINE_CPU_COUNT}
            coresPerSocket: 1
          memory:
            size: ${VIRTINK_MACHINE_MEMORY_SIZE}
          kernel:
            image: ${VIRTINK_MACHINE_KERNEL_IMAGE}
            cmdline: console=ttyS0 root=/dev/vda rw
          disks:
            - name: rootfs
          interfaces:
            - name: pod
        volumes:
          - name: rootfs
            containerRootfs:
              image: ${VIRTINK_MACHINE_ROOTFS_IMAGE}
              size: ${VIRTINK_MACHINE_ROOTFS_SIZE}
        networks:
          - name: pod
            pod: {}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineHealthCheck
metadata:
  name: ${CLUSTER_NAME}-worker-unhealthy-5m
spec:
  clusterName: ${CLUSTER_NAME}
  selector:
    matchExpressions:
      - key: cluster.x-k8s.io/control-plane
        operator: DoesNotExist
  unhealthyConditions:
    - type: Ready
      status: Unknown
      timeout: 300s
    - type: Ready
      status: "False"
      timeout: 300s
